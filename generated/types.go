// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Mon, 05 May 2025 18:53:10 BST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package generated

/*
#cgo LDFLAGS: -L/usr/lib -lrkllmrt
#include "types.h"
#include "rkllm.h"
#include "rkllm_input_wrappers.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// LLMHandle type as declared in include/rkllm.h:21
type LLMHandle unsafe.Pointer

// RKLLMExtendParam as declared in include/rkllm.h:65
type RKLLMExtendParam struct {
	Base_domain_id    int32
	Embed_flash       int8
	Enabled_cpus_num  int8
	Enabled_cpus_mask uint32
	Reserved          [106]byte
	refc9ca11e0       *C.RKLLMExtendParam
	allocsc9ca11e0    interface{}
}

// RKLLMParam as declared in include/rkllm.h:91
type RKLLMParam struct {
	Model_path         []byte
	Max_context_len    int32
	Max_new_tokens     int32
	Top_k              int32
	N_keep             int32
	Top_p              float32
	Temperature        float32
	Repeat_penalty     float32
	Frequency_penalty  float32
	Presence_penalty   float32
	Mirostat           int32
	Mirostat_tau       float32
	Mirostat_eta       float32
	Skip_special_token bool
	Is_async           bool
	Img_start          []byte
	Img_end            []byte
	Img_content        []byte
	Extend_param       RKLLMExtendParam
	refefead654        *C.RKLLMParam
	allocsefead654     interface{}
}

// RKLLMLoraAdapter as declared in include/rkllm.h:101
type RKLLMLoraAdapter struct {
	Lora_adapter_path []byte
	Lora_adapter_name []byte
	Scale             float32
	ref205d9e7e       *C.RKLLMLoraAdapter
	allocs205d9e7e    interface{}
}

// RKLLMEmbedInput as declared in include/rkllm.h:110
type RKLLMEmbedInput struct {
	Embed          []float32
	N_tokens       uint64
	ref229ed580    *C.RKLLMEmbedInput
	allocs229ed580 interface{}
}

// RKLLMTokenInput as declared in include/rkllm.h:119
type RKLLMTokenInput struct {
	Input_ids      []int32
	N_tokens       uint64
	ref7ad02f9d    *C.RKLLMTokenInput
	allocs7ad02f9d interface{}
}

// RKLLMMultiModelInput as declared in include/rkllm.h:132
type RKLLMMultiModelInput struct {
	Prompt         []byte
	Image_embed    []float32
	N_image_tokens uint64
	N_image        uint64
	Image_width    uint64
	Image_height   uint64
	refbb2dae19    *C.RKLLMMultiModelInput
	allocsbb2dae19 interface{}
}

// RKLLMInput as declared in include/rkllm.h:146
type RKLLMInput struct {
	Input_type     RKLLMInputType
	ref9338980a    *C.RKLLMInput
	allocs9338980a interface{}
}

// RKLLMLoraParam as declared in include/rkllm.h:154
type RKLLMLoraParam struct {
	Lora_adapter_name []byte
	refe5ce5edf       *C.RKLLMLoraParam
	allocse5ce5edf    interface{}
}

// RKLLMPromptCacheParam as declared in include/rkllm.h:163
type RKLLMPromptCacheParam struct {
	Save_prompt_cache int32
	Prompt_cache_path []byte
	refe52ea782       *C.RKLLMPromptCacheParam
	allocse52ea782    interface{}
}

// RKLLMInferParam as declared in include/rkllm.h:174
type RKLLMInferParam struct {
	Mode                RKLLMInferMode
	Lora_params         []RKLLMLoraParam
	Prompt_cache_params []RKLLMPromptCacheParam
	Keep_history        int32
	ref2c38a8e9         *C.RKLLMInferParam
	allocs2c38a8e9      interface{}
}

// RKLLMResultLastHiddenLayer as declared in include/rkllm.h:184
type RKLLMResultLastHiddenLayer struct {
	Hidden_states  []float32
	Embd_size      int32
	Num_tokens     int32
	ref30c701cb    *C.RKLLMResultLastHiddenLayer
	allocs30c701cb interface{}
}

// RKLLMResultLogits as declared in include/rkllm.h:194
type RKLLMResultLogits struct {
	Logits         []float32
	Vocab_size     int32
	Num_tokens     int32
	reff4388bea    *C.RKLLMResultLogits
	allocsf4388bea interface{}
}

// RKLLMResult as declared in include/rkllm.h:205
type RKLLMResult struct {
	Text              *byte
	Token_id          int32
	Last_hidden_layer RKLLMResultLastHiddenLayer
	Logits            RKLLMResultLogits
	refeb437fd0       *C.RKLLMResult
	allocseb437fd0    interface{}
}

// LLMResultCallback type as declared in include/rkllm.h:214
type LLMResultCallback func(result *RKLLMResult, userdata unsafe.Pointer, state LLMCallState)
